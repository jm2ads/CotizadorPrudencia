@page "/ziren/infopersonalcompleta/{oCoberturaID:int}"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager

@inject ServicioSingleton Singleton
@inject IJSRuntime JsRuntime
@using System.Text.Json;

<h3 style="color:white">Info Personal</h3>
@if (oTipoDocumentoDTOList == null || oCondicionesIVADTOList == null)
{
<Cargando></Cargando>
}
else
{
    <EditForm Model="oCoberturaID">

        <div class="row" style="margin:10px">
            <div class="col-md-2">
                <label style="color:white">Tipo Doc.</label>
                <div>
                    <InputSelect @bind-Value="otipoDocumento" class="form-control">
                        <option value="">Tipo Doc ...</option>
                        @foreach (var oTipoDocumento in oTipoDocumentoDTOList)
                            {
                            <option value="@oTipoDocumento.tipoDocumentoID">@oTipoDocumento.nombre</option>
                            }
                    </InputSelect>
                </div>
            </div>

            <div class="col-md-5">
                <label style="color:white">Nro. Doc.</label>
                <div class="row" >
                    <InputNumber @bind-Value="oPrefijo" class="form-control"  style="width:65px;" max="99"></InputNumber>
                    <label style="color:white;vertical-align:central">-</label>
                    <InputNumber @bind-Value="oNumeroDocumento" class="form-control"  style="width:120px;" max="9999999999"></InputNumber>
                    <label style="color:white">-</label>
                    <InputNumber @bind-Value="oDigitoVerif" class="form-control"  style="width:55px;" max="9"></InputNumber>
                </div>
            </div>
        </div>

        <div class="row" style="margin:10px">
            <div class="col-md-2">
                <label style="color:white">Sexo</label>
                <div>
                    <InputSelect @bind-Value="osexo" class="form-control">
                        <option value="">Sexo ...</option>
                        <option value="F">Femenino</option>
                        <option value="M">Masculino</option>
                    </InputSelect>
                </div>
            </div>



            <div class="col-md-3">
                <label style="color:white">Condicion Iva</label>
                <div>
                    <InputSelect @bind-Value="ocondicionIVA" class="form-control">
                        <option value="">Iva ...</option>
                        @foreach (var oCondicionesIVA in oCondicionesIVADTOList)
                            {
                            <option value="@oCondicionesIVA.condicionIVAID">@oCondicionesIVA.nombre</option>
                            }
                    </InputSelect>
                </div>
            </div>
            <div class="col-md-3" >
                <label style="color:white">Tiene Acreedor Prendario?</label>
                <div>
                    <InputCheckbox @bind-Value="oprendario" style="margin-left:20px" >
                       
                    </InputCheckbox>
                </div>
            </div>

        </div>

        <div class="row" style="margin:10px">
           

            <div class="col-md-7">
                <label style="color:white">Domicilio Calle</label>
                <InputText @bind-Value="odomicilio" class="form-control" placeholder="Calle"></InputText>
            </div>
            <div class="col-md-2">
                <label style="color:white">Nro</label>
                <InputNumber @bind-Value="odomicilioNumero" class="form-control" placeholder="Nro"> </InputNumber>
            </div>
            <div class="col-md-2">
                <label style="color:white">Piso</label>
                <InputNumber @bind-Value="odomicilioPiso" class="form-control" placeholder="Piso"> </InputNumber>
            </div>
            <div class="col-md-1">
                <label style="color:white">Dto</label>
                <InputText @bind-Value="odomicilioDpto" class="form-control" placeholder="Dto"> </InputText>
            </div>
        </div>



        <button type="button" class="btn btn-info" style="width:200px" @onclick="@(() => OnClickHandle())">Confirma Cotizacion</button>
    </EditForm>
}




@code {


    [Parameter] public int oCoberturaID { get; set; }
    private string osexo;
    private string otipoDocumento;


    private int? oPrefijo;
    private int? oNumeroDocumento;
    private int? oDigitoVerif;

    private bool oprendario;
    private string ocondicionIVA;

    private string odomicilio;
    private int odomicilioNumero;
    private int odomicilioPiso;
    private string odomicilioDpto;
    private string opaisID = "ARG";


    private List<TipoDocumentoDTO> oTipoDocumentoDTOList;
    private List<CondicionesIVADTO> oCondicionesIVADTOList;

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<TipoDocumentoDTO>>("api/Externo/Prudencia/catalogos/GetTiposDocumentos");
        oTipoDocumentoDTOList = responseHttp.Response;

        oTipoDocumentoDTOList = (from c in oTipoDocumentoDTOList
                                 where c.tipoDocumentoID == "80" || c.tipoDocumentoID == "81" || c.tipoDocumentoID == "83"
                                 select c).ToList();




        var responseHttp2 = await repositorio.Get<List<CondicionesIVADTO>>("api/Externo/Prudencia/catalogos/GetCondicionesIva");
        oCondicionesIVADTOList = responseHttp2.Response;

#if DEBUG

        oPrefijo = 20;
        oNumeroDocumento = 18205329;
        oDigitoVerif = 6;

        odomicilio = "Enrique Prins ";
        odomicilioNumero = 1469;
        odomicilioPiso = 0;
        odomicilioDpto = "-";
#endif
    }
    private async Task OnClickHandle()
    {
        string oNroDoc = oPrefijo.ToString().Trim() + oNumeroDocumento.ToString().Trim() + oDigitoVerif.ToString().Trim();
        if (!(UtilidadesString.ValidateCUIT(oNroDoc)))
        {
            var mensajeError = "Nro de Documento Invalido";

            await mostrarMensajes.MostrarMensajeError(mensajeError);
            return;
        }

        if (string.IsNullOrEmpty(osexo) || string.IsNullOrEmpty(otipoDocumento)
            || string.IsNullOrEmpty(ocondicionIVA) || string.IsNullOrEmpty(odomicilio) )
        {
            var mensajeError = "Todos los campos son requeridos";

            await mostrarMensajes.MostrarMensajeError(mensajeError);
            return;
        }

        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        CotizacionAutoDTO oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        oCotizacionAutoDTO.asegurado.sexo = osexo;
        oCotizacionAutoDTO.asegurado.tipoDocumento = otipoDocumento;
        oCotizacionAutoDTO.asegurado.numeroDocumento = oNroDoc;
        oCotizacionAutoDTO.asegurado.condicionIVA = ocondicionIVA;


        oCotizacionAutoDTO.asegurado.domicilio = odomicilio;
        oCotizacionAutoDTO.asegurado.domicilioNumero = odomicilioNumero;
        oCotizacionAutoDTO.asegurado.domicilioPiso = odomicilioPiso;
        oCotizacionAutoDTO.asegurado.domicilioDpto = odomicilioDpto;

        oCotizacionAutoDTO.asegurado.localidad = "Localidad TODO";
        oCotizacionAutoDTO.asegurado.paisID = opaisID;


        oCotizacionAutoDTO.tieneAcreedorPrendario= oprendario;


        CotizacionAutoDTOJson = JsonSerializer.Serialize(oCotizacionAutoDTO);
        await JsRuntime.SetInLocalStorage("CotizacionAutoDTO", CotizacionAutoDTOJson);
        Console.WriteLine(CotizacionAutoDTOJson);

        //navigationManager.NavigateTo($"/ziren/cotizacion/{oCoberturaID}");
        navigationManager.NavigateTo($"/ziren/imagenes/{oCoberturaID}");
    }

}
