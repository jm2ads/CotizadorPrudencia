@*@page "/ziren/cp/{marcaID:int}/{anoID:int}/{modeloID:int}/{provinciaID:int}"*@
@page "/ziren/cp"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager

@inject IJSRuntime JsRuntime
@using System.Text.Json;
<div class="row" style="margin:5px">
    <h3 style="color:white">Seleccione Codigo Postal</h3>
</div>
<div class="row" style="margin:5px">
    <label style="color:white;font-size: 0.8em;align-content:initial">Declarar código postal correcto ya que afecta al costo de tu seguro, para tener una cotización correcta 🤗</label>


</div>
<div class="row" style="margin:5px">
    <a href="https://codigopostal.com.ar" class="btn btn-info" target="_blank" style="align-self:initial;font-size:smaller">Saber mi Código Postal, Facil y Rapido</a>
</div>


<div class="row" style="margin:5px">
    <label style="color:white;font-size: 0.8em;align-content:initial; ">Tipee 4 digitos de su código postal o Localidad</label>
</div>
<div style="margin-right: 2%; margin-bottom: 10px; text-align: center;">
    <input @bind-value="oCpDescripcion" @bind-value:event="oninput"
           @onkeyup="@((KeyboardEventArgs e) => CPKeyUp(e))"
           type="text" class="form-control" id="cp" placeholder="C.P. o Localidad" />
</div>



@if (oCodigoPostalList.Count == 0)
{
    if (oCpDescripcion.Trim().Length > 3)
    {
        if (buscandoCP)
        {
            <Cargando></Cargando>
        }

        else
        {
            <label style="color:white">No se encontraron C.P. con ese filtro</label>
        }
    }
    else
    {
        if (provinciaID == "1")
        {
            <label style="color: white;margin: 5px">Ingrese los 4 numeros de su C.P.</label>
        }
        else
        {
            <label style="color: white;margin: 5px">Ingrese al menos 4 digitos de su C.P. o Localidad</label>
        }
    }


}
else
{

    if (buscandoCP)
    {
        <Cargando></Cargando>
    }
    else
    {
        <div style="display: flex; flex-wrap: wrap; align-items: center;">
            @foreach (var oCodigoPostal in oCodigoPostalList)
            {
                <div style="margin-right: 2%; margin-bottom: 10px; text-align: center;">
                    <div>
                        <button type="button" class="btn btn-success" style="width:auto" @onclick="@(() => OnClickHandle(oCodigoPostal))">
                            @(oCodigoPostal.localidad +"(" + oCodigoPostal.codigoPostalID +")")
                        </button>
                    </div>
                </div>
            }
        </div>
    }




}


@if (partnerWhatsapp == string.Empty)
{
    <Cargando></Cargando>
}
else
{
    partner.Celular1 = "54" + partner.Celular1;
    <a href="https://wa.me/@partner.Celular1?text=@partner.Whatsapp" title="Chat with Us" class="whatsapp" target="_blank" style="position: fixed; top: 500px; right: 30px; z-index: 99">
        <img src="../images/whatsapp.png" style="margin-top:0px;margin-left:0px" height="48" width="48" />
    </a>
}

@code {
    private string oCpDescripcion = "";
    private string provinciaID = "";
    //private List<string> oCodigoPostalList;
    //private List<string> oCodigoPostalAuxList;
    private List<CodigoPostalDTO> oCodigoPostalList = new List<CodigoPostalDTO>();
    Partner partner = new Partner();
    private string partnerWhatsapp = string.Empty;
    private bool buscandoCP = false;

    protected override async Task OnInitializedAsync()
    {
        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        CotizacionAutoDTO oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);
        provinciaID = oCotizacionAutoDTO.asegurado.provinciaID;

        //var responseHttp = await repositorio.Get<List<string>>("api/Externo/Prudencia/catalogos/GetCodPostalesDistinct/" + oCotizacionAutoDTO.asegurado.provinciaID);
        //oCodigoPostalList = responseHttp.Response;
        //oCodigoPostalAuxList = responseHttp.Response;

        #region GetFromLocalStoragePartner
        string partnerJson = await JsRuntime.GetFromLocalStorage("partner");
        partner = JsonSerializer.Deserialize<Partner>(partnerJson);
        partnerWhatsapp = partner.Whatsapp;
        #endregion

    }
    private async Task OnClickHandle(CodigoPostalDTO codigoPostalDTO)
    {
        //Singleton.oCotizacionAutoDTO.asegurado.codigoPostal = ocodigoPostalID;
        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        CotizacionAutoDTO oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        oCotizacionAutoDTO.asegurado.codigoPostal = codigoPostalDTO.codigoPostalID;
        oCotizacionAutoDTO.asegurado.localidad = codigoPostalDTO.localidad;

        CotizacionAutoDTOJson = JsonSerializer.Serialize(oCotizacionAutoDTO);
        await JsRuntime.SetInLocalStorage("CotizacionAutoDTO", CotizacionAutoDTOJson);
        Console.WriteLine(CotizacionAutoDTOJson);


        navigationManager.NavigateTo("/ziren/infopersonal");
    }
    private async Task CPKeyUp(KeyboardEventArgs e)
    {
        //int number;
        //bool Isnumber = Int32.TryParse(oCpDescripcion, out number);
        //if (!Isnumber)
        //{
        //    oCpDescripcion = string.Empty;
        //}

        if (oCpDescripcion.Trim().Length < 4)
            return;

        buscandoCP = true;
        List<CodigoPostalDTO> oCodigoPostalAuxList = new List<CodigoPostalDTO>();
        var responseHttp = await repositorio.Get<List<CodigoPostalDTO>>("api/Externo/Prudencia/catalogos/GetCpLocalidad/" + provinciaID + "/" + oCpDescripcion);
        oCodigoPostalAuxList = responseHttp.Response;
        if (provinciaID == "1")
            oCodigoPostalAuxList = (List<CodigoPostalDTO>)oCodigoPostalAuxList.Take(1).ToList();

        buscandoCP = false;
        oCodigoPostalList = oCodigoPostalAuxList;



        //oCodigoPostalAuxList = responseHttp.Response;


        //oCodigoPostalAuxList = (from c in oCodigoPostalList
        //                        where c.ToLower().Contains(oCpDescripcion.ToLower())
        //                        select c).ToList();
    }
}
