@*@page "/ziren/cp/{marcaID:int}/{anoID:int}/{modeloID:int}/{provinciaID:int}"*@
@page "/ziren/cp"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager

@inject IJSRuntime JsRuntime
@using System.Text.Json;
<div class="row" style="margin:10px">


    <div class="col-md-4">
        <h3 style="color:white">Seleccione Codigo Postal</h3>
    </div>
    <div class="col-md-2">
        <label style="color:white;font-size: 0.8em;align-content:initial">Tipee solo numeros</label>
    </div>
    <div class="col-md-6">
        <a href="https://codigopostal.com.ar" class="btn btn-success" target="_blank" style="align-self:initial;font-size:smaller">Necesito saber mi Codigo Postal</a>
    </div>

</div>



@if (oCodigoPostalAuxList == null)
{
    <Cargando></Cargando>
}
else
{
    @if (oCodigoPostalList.Count == 0)
    {
        <text>No hay registros para mostrar</text>

    }
    else
    {
        <label style="color:white;font-size: 0.8em;align-content:initial">Declarar código postal correcto ya que afecta al costo de tu seguro, para tener una cotización correcta 🤗</label>

        <div style="margin-right: 2%; margin-bottom: 10px; text-align: center;">
            <input @bind-value="oCpDescripcion" @bind-value:event="oninput"
                   @onkeyup="@((KeyboardEventArgs e) => CPKeyUp(e))"
                   type="text" class="form-control" id="cp" placeholder="C.P." />
        </div>

        if (oCpDescripcion.Length > 0)
        {
            <div style="display: flex; flex-wrap: wrap; align-items: center;">
                @foreach (var oCodigoPostal in oCodigoPostalAuxList)
                {
                    <div style="margin-right: 2%; margin-bottom: 10px; text-align: center;">
                        <div>
                            @*<a href="/ziren/CotizacionRapida/@marcaID/@anoID/130108/@oProvincias.Key" class="btn btn-success" style="width:200px"> @oProvincias.Value</a>*@
                            <button type="button" class="btn btn-info" style="width:70px" @onclick="@(() => OnClickHandle(oCodigoPostal))">
                                @oCodigoPostal
                            </button>
                        </div>
                    </div>
                }
            </div>
        }


    }
}



@code {
    string oCpDescripcion = "";

    private List<string> oCodigoPostalList;
    private List<string> oCodigoPostalAuxList;



    protected override async Task OnInitializedAsync()
    {
        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        CotizacionAutoDTO oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        var responseHttp = await repositorio.Get<List<string>>("api/Externo/Prudencia/catalogos/GetCodPostalesDistinct/" + oCotizacionAutoDTO.asegurado.provinciaID);
        oCodigoPostalList = responseHttp.Response;
        oCodigoPostalAuxList = responseHttp.Response;



    }
    private async Task OnClickHandle(string ocodigoPostalID)
    {
        //Singleton.oCotizacionAutoDTO.asegurado.codigoPostal = ocodigoPostalID;
        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        CotizacionAutoDTO oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        oCotizacionAutoDTO.asegurado.codigoPostal = ocodigoPostalID;

        CotizacionAutoDTOJson = JsonSerializer.Serialize(oCotizacionAutoDTO);
        await JsRuntime.SetInLocalStorage("CotizacionAutoDTO", CotizacionAutoDTOJson);
        Console.WriteLine(CotizacionAutoDTOJson);


        navigationManager.NavigateTo("/ziren/infopersonal");
    }
    private async Task CPKeyUp(KeyboardEventArgs e)
    {
        oCodigoPostalAuxList = (from c in oCodigoPostalList
                                where c.ToLower().Contains(oCpDescripcion.ToLower())
                                select c).ToList();
    }
}
