@page "/ziren/reporte/{polizaID:int}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensajes
@inject IJSRuntime JsRuntime
@using System.Text.Json;
<h3 style="color:white">Ya tenes tu Seguro!!!</h3>

<h4 style="color:white">Descargue sus Reportes</h4>
@if (oRespuestaReporteDTOList == null)
{
    <div style="margin-right: 2%; margin-bottom: 10px; text-align: center;">
        <Cargando></Cargando>
    </div>
}
else
{
    @for (int i = 0; i <= oRespuestaReporteDTOList.Count() - 1; i++)
    {
        <div style="margin-right: 2%; margin-bottom: 10px; text-align: center;">
            <div>
                <a href="@oRespuestaReporteDTOList[i].urlReporte" target="_blank" class="btn btn-info" style="width:250px">@oRespuestaReporteDTOList[i].reporte</a>
            </div>
        </div>
    }

}





@code {
    [Parameter] public int polizaID { get; set; }

    List<RespuestaReporteDTO> oRespuestaReporteDTOList;


    protected override async Task OnInitializedAsync()
    {


        RespuestaReporteDTO[] oRespuestaReporteDTOListAux = new RespuestaReporteDTO[7];

        var responseHttp = await repositorio.Get<RespuestaReporteDTO[]>($"api/Externo/Prudencia/polizas/{polizaID}/reportes");
        if (responseHttp.Error)
        {
            var mensajeError = await responseHttp.GetBody();

            await mostrarMensajes.MostrarMensajeError(mensajeError);
        }
        else
        {




            oRespuestaReporteDTOListAux = responseHttp.Response;
            oRespuestaReporteDTOList = new List<RespuestaReporteDTO>();
            for (int i = 0; i <= oRespuestaReporteDTOListAux.Count() - 1; i++)
            {
                RespuestaReporteDTO oRespuestaReporteDTO = new RespuestaReporteDTO();
                oRespuestaReporteDTO.reporte = oRespuestaReporteDTOListAux[i].reporte;
                oRespuestaReporteDTO.urlReporte = oRespuestaReporteDTOListAux[i].urlReporte;

                oRespuestaReporteDTOList.Add(oRespuestaReporteDTO);
            }



            SendEmail( oRespuestaReporteDTOListAux);


        }





    }


    private async Task SendEmail(RespuestaReporteDTO[] oRespuestaReporteDTOListAux)
    {
        #region Send Email
        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        CotizacionAutoDTO oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        string cotizacionEntitiesDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionEntitiesDTO");
        CotizacionEntitiesDTO cotizacionEntitiesDTO = JsonSerializer.Deserialize<CotizacionEntitiesDTO>(cotizacionEntitiesDTOJson);


        MailApp oMailApp = new MailApp();
        string oTo = oCotizacionAutoDTO.asegurado.mail;
        string oBody = "body" + DateTime.Now.ToLongDateString() + DateTime.Now.ToShortTimeString();

        #region MyRegion

        System.Text.StringBuilder sHtml = new System.Text.StringBuilder();
        string CeldaBegin = "<tr><td align='left'>";
        string CeldaEnd = "</td></tr>";


        sHtml.Append("<HTML style='height: 100 %;margin: 0;background-image: radial-gradient(circle, #803496, #70288d, #5f1c83, #4e107a, #3c0371);'><body >");
        sHtml.Append("<table border='0' align='center'>");
        sHtml.Append(CeldaBegin);

        sHtml.Append("<img src='https://cotice.ziren.com.ar/images/EstasCubierto.png' width='200'  />");
        sHtml.Append(CeldaEnd);

        sHtml.Append(CeldaBegin);
        sHtml.Append("Auto " + cotizacionEntitiesDTO.marcasAutos.descripcion + "/" + cotizacionEntitiesDTO.modelosAutos.descripcionGrupo + "/" + cotizacionEntitiesDTO.versionesAutos.descripcion + "/" + cotizacionEntitiesDTO.ano.ToString());
        sHtml.Append(CeldaEnd);

        sHtml.Append(CeldaBegin);
        sHtml.Append("Asegurado " + oCotizacionAutoDTO.asegurado.nombre);
        sHtml.Append(CeldaEnd);

        sHtml.Append(CeldaBegin);
        sHtml.Append("Su poliza nro " + polizaID);
        sHtml.Append(CeldaEnd);







        for (int i = 0; i <= oRespuestaReporteDTOListAux.Count() - 1; i++)
        {

            sHtml.Append(CeldaBegin);
            sHtml.Append("<a href='" + oRespuestaReporteDTOListAux[i].urlReporte + "' class='btn btn-info' target='_blank' style='align-self:initial; '>" + oRespuestaReporteDTOListAux[i].reporte + "</a>");
            sHtml.Append(CeldaEnd);
        }











        sHtml.Append(CeldaBegin);
        //sHtml.Append("<img src='{0}/images/EstasCubierto.png' width='300' />");
        sHtml.Append("<img src='https://cotice.ziren.com.ar/images/icon-192.png' width='100'  />");
        sHtml.Append("<img src='https://cotice.ziren.com.ar/images/LogoPrudencia.png' width='200'  />");
        sHtml.Append(CeldaEnd);

        sHtml.Append("</table></body></HTML>");

        oBody = sHtml.ToString();
        #endregion

        string oSubject = "Ziren => Enlaces de tu Poliza";
        oMailApp.To = oTo;
        oMailApp.Bcc = "adriel@ziren.com.ar";
        oMailApp.Body = oBody;
        oMailApp.Subject = oSubject;

        var responseHttp = await repositorio.Post<MailApp, string>("api/Externo/Prudencia/SendMail", oMailApp);

        if (responseHttp.Error)
        {
            var mensajeError = await responseHttp   .GetBody();

            await mostrarMensajes.MostrarMensajeError("No se pudo enviar el mail con los enlaces para la poliza");


        }
        else
        {
            await mostrarMensajes.MostrarMensajeExitoso("Se le envio un mail con los enlaces para la poliza");

        }







        #endregion
    }
}
