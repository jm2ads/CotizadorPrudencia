@page "/ziren/marcas"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager
@inject IJSRuntime JsRuntime
@using System.Text.Json;
<h3 style="color:white">Seleccione la Marca</h3>

@*<div class="row">
        <div class="col-lg-1"></div>
        <div class="col-12 col-sm-12 col-lg-11">
            <label style="color: white;font-size: 0.8em;align-content: end;margin-left: 5px">
                Si la marca de su vehiculo no aparece, tipee las primeras letras
            </label>
        </div>
    </div>*@


@if (oMarcasAutosAuxList == null)
{
    <Cargando></Cargando>

}
else
{
    <label style="color:white;font-size: 0.8em;align-content:initial;margin:5px">Si la marca de su vehiculo no aparece, tipee las primeras letras</label>

    <div style="margin-right: 2%; margin-bottom: 10px; text-align: center;">
        <input @bind-value="oMarcaDescripcion" @bind-value:event="oninput" autocomplete="off"
               @onkeyup="@((KeyboardEventArgs e) => MarcaKeyUp(e))"
               type="text" class="form-control" id="titulo" placeholder="Marca" />
    </div>

    @if (oMarcasAutosAuxList.Count == 0)
    {

        <label style="color:white">No hay registros para mostrar</label>


    }
    else
    {



        <div style="display: flex; flex-wrap: wrap; align-items: center;">
            @foreach (var oMarcasAutos in oMarcasAutosAuxList)
            {
                <div style="margin-right: 1%; margin-bottom: 10px; text-align: center;">
                    <div>
                        <button type="submit" class="btn btn-success" style="width:auto" value="@oMarcasAutos.marcaID" @onclick="@(() => OnClickHandle(oMarcasAutos.marcaID))">
                            @oMarcasAutos.descripcion
                        </button>
                    </div>
                </div>
            }

        </div>






    }

}
@if (partner.Whatsapp == string.Empty)
{
    <Cargando></Cargando>
}
else
{
    <a href="https://wa.me/541144406739?text=@partner.Whatsapp" title="Chat with Us" class="whatsapp" target="_blank" style="position:absolute; bottom:30px;right:30px">
        <img src="../images/whatsapp.png" style="margin-top:0px;margin-left:0px" height="48" width="48" />
    </a>
}

@code {

    private List<MarcasAutos> oMarcasAutosList;
    private List<MarcasAutos> oMarcasAutosAuxList;
    private MarcasAutos oMarcasAutosAux = new MarcasAutos();
    string oMarcaDescripcion = "";
    private string partnerWhatsapp = string.Empty;

    Partner partner = new Partner();

    private CotizacionAutoDTO oCotizacionAutoDTO;

    protected override async Task OnInitializedAsync()
    {

        Console.WriteLine("Inicia :" + DateTime.Now);

        var responseHttp = await repositorio.Get<List<MarcasAutos>>("api/Externo/Prudencia/catalogos/GetMarcasAutos");
        oMarcasAutosList = responseHttp.Response;
        // oMarcasAutosAuxList = responseHttp.Response;
        oMarcasAutosAuxList = (from c in oMarcasAutosList
                               where c.marcaID == 46
                               || c.marcaID == 18
                               || c.marcaID == 12
                               || c.marcaID == 17
                               || c.marcaID == 32
                               || c.marcaID == 11
                               || c.marcaID == 6

                               || c.marcaID == 45
                               || c.marcaID == 19
                               || c.marcaID == 30
                               || c.marcaID == 36
                               || c.marcaID == 20
                               || c.marcaID == 28
                               || c.marcaID == 8
                               || c.marcaID == 43
                               select c).ToList();
        Console.WriteLine("Fin :" + DateTime.Now);

        #region GetFromLocalStoragePartner
        string partnerJson = await JsRuntime.GetFromLocalStorage("partner");
        partner = JsonSerializer.Deserialize<Partner>(partnerJson);
        #endregion

    }

    protected override async Task OnParametersSetAsync()
    {



    }


    private async Task OnClickHandle(int omarcaID)
    {


        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        oCotizacionAutoDTO.vehiculo.marcaID = omarcaID;

        CotizacionAutoDTOJson = JsonSerializer.Serialize(oCotizacionAutoDTO);
        await JsRuntime.SetInLocalStorage("CotizacionAutoDTO", CotizacionAutoDTOJson);
        Console.WriteLine(CotizacionAutoDTOJson);

        #region CotizacionEntitiesDTO

        string cotizacionEntitiesDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionEntitiesDTO");
        CotizacionEntitiesDTO cotizacionEntitiesDTO = JsonSerializer.Deserialize<CotizacionEntitiesDTO>(cotizacionEntitiesDTOJson);

        MarcasAutos marcasAutos = (from c in oMarcasAutosList
                                   where c.marcaID == omarcaID
                                   select c).FirstOrDefault();

        cotizacionEntitiesDTO.marcasAutos = marcasAutos;

        cotizacionEntitiesDTOJson = JsonSerializer.Serialize(cotizacionEntitiesDTO);
        await JsRuntime.SetInLocalStorage("CotizacionEntitiesDTO", cotizacionEntitiesDTOJson);
        Console.WriteLine(cotizacionEntitiesDTOJson);
        #endregion


        navigationManager.NavigateTo("/ziren/ano");

    }

    private async Task MarcaKeyUp(KeyboardEventArgs e)
    {
        if (oMarcaDescripcion.Trim().Length < 2)
        {
            oMarcasAutosAuxList = (from c in oMarcasAutosList
                                   where c.marcaID == 46
                                   || c.marcaID == 18
                                   || c.marcaID == 12
                                   || c.marcaID == 17
                                   || c.marcaID == 32
                                   || c.marcaID == 11
                                   || c.marcaID == 6
                                   select c).ToList();
            return;
        }


        oMarcasAutosAuxList = (from c in oMarcasAutosList
                               where c.descripcion.ToLower().Contains(oMarcaDescripcion.ToLower())
                               select c).ToList();

    }
}
