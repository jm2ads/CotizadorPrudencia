@page "/ziren/emision/{oAdjuntoID1:int}/{oAdjuntoTipo1:int}/{oAdjuntoID2:int}/{oAdjuntoTipo2:int}/{oAdjuntoID3:int}/{oAdjuntoTipo3:int}/{oAdjuntoID4:int}/{oAdjuntoTipo4:int}/{oAdjuntoID5:int}/{oAdjuntoTipo5:int}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensajes
@inject IJSRuntime JSRuntime

@using System.Text.Json;
<h3 style="color:white">Emision de Poliza</h3>
<label style="color:white;font-size: 0.8em;align-content:initial">Sitio Seguro</label>

@if (oTipoMedioPagoDTOList == null || oProvinciasList == null || oCondicionesIVADTOList == null || oTipoDocumentoDTOList == null || oMostrarCargando)
{
    <Cargando></Cargando>
}
else
{
    <EditForm Model="oEmitirCotizacionAutoDTO" OnValidSubmit="OnDataAnnonationsValidated">

        <div class="container p-3 my-3 bg-transparent border">
            <div class="row" style="margin:10px">


                <div class="col-md-5">
                    <label style="color:white">Motor Nro:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.motor"></InputText>
                    </div>
                </div>

                <div class="col-md-5">
                    <label style="color:white">Chasis Nro:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.chasis"></InputText>
                    </div>
                </div>

            </div>


            <div class="row" style="margin:10px">

                <div class="col-md-5">
                    <label style="color:white">Fecha de Inicio de póliza/seguro (A PARTIR DE QUE DIA QUIERO EL SEGURO)</label>
                    <div>
                        <InputDate  class="form-control" @bind-Value="oInicioVigencia"></InputDate>
                    </div>
                </div>

                <div class="col-md-5">
                    <label style="color:white">Observaciones de su Vehículo completar solo si tiene daños : </label>
                    <div>
                        <InputText  class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.observaciones"></InputText>
                    </div>
                </div>

            </div>


        </div>



        <div class="row" style="margin:0px">
            <label style="color:white;margin:0px">Medio de Pago</label>
        </div>
        <div class="container p-3 my-3 bg-transparent border" style="margin-top:5px">
            <div class="row" style="margin:10px">
                <div class="col-md-5">
                    <label style="color:white">Tipo Medio Pago</label>
                    <div>
                        <InputSelect class="form-control" @bind-Value="oMedioPagoID">
                            <option value="">Medio de Pago ...</option>
                            @foreach (TipoMedioPagoDTO oTipoMedioPagoDTO in oTipoMedioPagoDTOList)
                                {
                                <option value="@oTipoMedioPagoDTO.medioPagoID">@oTipoMedioPagoDTO.nombre</option>
                                }
                        </InputSelect>
                    </div>
                </div>
                <div class="col-md-3">
                    <label style="color:white">Fecha Vto Tarjeta de Credito:</label>
                    <div class="row">
                        <InputSelect id="cmbVencimientoMedioPagoMes" class="form-control modified valid" style="width: 76px;" @bind-Value="oVencimientoMedioPagoMes">
                            <option value="">Mes ...</option>
                            @for (int i = 1; i <= 12; i++)
                                {
                                <option value="@i.ToString().PadLeft(2,'0')">@i.ToString().PadLeft(2, '0')</option>
                                }
                        </InputSelect>
                        <label style="color:white;margin-left:3px;margin-right:3px">/</label>
                        <InputSelect id="cmbVencimientoMedioPagoAno" class="form-control modified valid" style="width: 76px;" @bind-Value="oVencimientoMedioPagoAno">
                            <option value="">Mes ...</option>
                            @for (int i = DateTime.Today.Year; i <= DateTime.Today.AddYears(6).Year; i++)
                                {
                                <option value="@i.ToString()">@i.ToString()</option>
                                }
                        </InputSelect>
                    </div>
                </div>
                <div class="col-md-4">
                    <label style="color:white">Numero Tarjeta de Credito o Numero CBU:</label>
                    <div>
                        <InputText id="txtNumeroMedioPago" class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.medioDePago.numeroMedioPago"></InputText>

                    </div>
                </div>

            </div>
            <div class="row" style="margin:10px">
                <div class="col-md-5">
                    <label style="color:white">Nombre y Apellido Titular Tarjeta o CBU:</label>
                    <div>
                        <InputText id="txtNombreTitularTarjeta" class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.medioDePago.nombreTitularTarjeta"></InputText>

                    </div>
                </div>
                <div class="col-md-3">
                    <label style="color:white">Tipo Doc Titular Tarjeta:</label>
                    <div>
                        @*<InputText class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.medioDePago.tipoDocTitularTarjeta"></InputText>*@
                        <InputText id="txtTipoDocTitularTarjeta" class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.medioDePago.tipoDocTitularTarjeta" disabled="true"></InputText>
                    </div>
                </div>
                <div class="col-md-4">
                    <label style="color:white">Nro DNI Titular Tarjeta Credito:</label>
                    <div>
                        <InputText id="txtNroDocTitularTarjeta" class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.medioDePago.nroDocTitularTarjeta" ></InputText>
                    </div>
                </div>
            </div>
        </div>




        <div class="container p-3 my-3 bg-transparent border" hidden="@(! oCotizacionAutoDTO.vehiculo.tieneGNC)">
            <label style="color:white"> GNC</label>
            <div class="row" style="margin:10px">

                <div class="col-md-5">
                    <label style="color:white">Regulador Marca:</label>
                    <InputText class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.gncMarca"></InputText>
                </div>
                <div class="col-md-3">
                    <label style="color:white">GNC Capacidad:</label>
                    @*<InputNumber class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.gncCapacidad"></InputNumber>*@
                    <InputSelect @bind-Value="oEmitirCotizacionAutoDTO.gncCapacidad" class="form-control">
                        <option value="">Capacidad ...</option>
                        <option value="30">30</option>
                        <option value="60">60</option>
                        <option value="90">90</option>
                        <option value="120">120</option>
                    </InputSelect>
                </div>


            </div>
            <div class="row" style="margin:10px">
                <div class="col-md-4">
                    <label style="color:white">GNC Nro Oblea:</label>
                    <InputText class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.gncOblea"></InputText>
                </div>
                <div class="col-md-4">
                    <label style="color:white">GNC Regulador Nro de Serie:</label>
                    <InputText class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.gncRegulador"></InputText>
                </div>
                <div class="col-md-4">
                    <label style="color:white">GNC Oblea Fecha Vto:</label>
                    <InputDate class="form-control" @bind-Value="oVtoPruebaHidr"></InputDate>
                </div>
            </div>
        </div>




        <div class="container p-3 my-3 bg-primary text-white" hidden="@(!oCotizacionAutoDTO.tieneAcreedorPrendario)">

            <div class="row" style="margin:10px">
                <label style="color:white">Acreedor Prendario</label>
            </div>

            <div class="row" style="margin:10px">
                <div class="col-md-5">
                    <label style="color:white">Nombre y Apellido:</label>
                    <div>
                        <InputText class="form-control" @bind-Value="oEmitirCotizacionAutoDTO.prendario.nombre" placeholder="Nombre y Apelllido"></InputText>

                    </div>
                </div>
                <div class="col-md-3">
                    <label style="color:white">Tipo Doc.</label>
                    <div>
                        <InputSelect @bind-Value="oEmitirCotizacionAutoDTO.prendario.tipoDocumento" class="form-control">
                            <option value="">Tipo Doc ...</option>
                            @foreach (var oTipoDocumento in oTipoDocumentoDTOList)
                                {
                                <option value="@oTipoDocumento.tipoDocumentoID">@oTipoDocumento.nombre</option>
                                }
                        </InputSelect>
                    </div>
                </div>

                <div class="col-md-4">
                    <label style="color:white">Nro. Doc.</label>
                    <div>
                        <InputText @bind-Value="oEmitirCotizacionAutoDTO.prendario.numeroDocumento" class="form-control" placeholder="Nro. Doc."></InputText>
                    </div>
                </div>
            </div>

            <div class="row" style="margin:10px">

            </div>
            <div class="row" style="margin:10px">
                <div class="col-md-5">
                    <label style="color:white">Fecha Nacimiento:</label>
                    <div>
                        <InputDate class="form-control" @bind-Value="ofechaNacimiento"></InputDate>
                    </div>
                </div>
                <div class="col-md-2">
                    <label style="color:white">Sexo</label>
                    <div>
                        <InputSelect @bind-Value="oEmitirCotizacionAutoDTO.prendario.sexo" class="form-control">
                            <option value="">Sexo ...</option>
                            <option value="F">Femenino</option>
                            <option value="M">Masculino</option>
                        </InputSelect>
                    </div>
                </div>

                <div class="col-md-3">
                    <label style="color:white">Condicion Iva</label>
                    <div>
                        <InputSelect @bind-Value="oEmitirCotizacionAutoDTO.prendario.condicionIVA" class="form-control">
                            <option value="">Iva ...</option>
                            @foreach (var oCondicionesIVA in oCondicionesIVADTOList)
                                {
                                <option value="@oCondicionesIVA.condicionIVAID">@oCondicionesIVA.nombre</option>
                                }
                        </InputSelect>
                    </div>
                </div>
            </div>

            <div class="row" style="margin:10px">
                <div class="col-md-7">
                    <label style="color:white">Domicilio Calle</label>
                    <InputText @bind-Value="oEmitirCotizacionAutoDTO.prendario.domicilio" class="form-control" placeholder="Calle"></InputText>
                </div>
                <div class="col-md-2">
                    <label style="color:white">Nro</label>
                    <InputNumber @bind-Value="oEmitirCotizacionAutoDTO.prendario.domicilioNumero" class="form-control" placeholder="Nro"> </InputNumber>
                </div>
                <div class="col-md-2">
                    <label style="color:white">Piso</label>
                    <InputNumber @bind-Value="oEmitirCotizacionAutoDTO.prendario.domicilioPiso" class="form-control" placeholder="Piso"> </InputNumber>
                </div>
                <div class="col-md-1">
                    <label style="color:white">Dto</label>
                    <InputText @bind-Value="oEmitirCotizacionAutoDTO.prendario.domicilioDpto" class="form-control" placeholder="Dto"> </InputText>
                </div>
            </div>

            <div class="row" style="margin:10px">
                <div class="col-md-5">
                    <label style="color:white">Provincia</label>
                    <div>
                        <InputSelect @bind-Value="oEmitirCotizacionAutoDTO.prendario.provinciaID" class="form-control">
                            <option value="">Provincia ...</option>
                            @foreach (var oProvincias in oProvinciasList)
                                {
                                <option value="@oProvincias.provinciaID">@oProvincias.descripcion</option>
                                }
                        </InputSelect>
                    </div>
                </div>

                <div class="col-md-5">
                    <label style="color:white">Localidad</label>
                    <div>
                        <InputText @bind-Value="oEmitirCotizacionAutoDTO.prendario.localidad" class="form-control" placeholder="Localidad"></InputText>
                    </div>
                </div>
                <div class="col-md-2">
                    <label style="color:white">CP.</label>
                    <div>
                        <InputText @bind-Value="oEmitirCotizacionAutoDTO.prendario.codigoPostal" class="form-control" placeholder="CP"></InputText>
                    </div>
                </div>
            </div>

            <div class="row" style="margin:10px">


                <div class="col-md-5">
                    <label style="color:white">Telefono</label>
                    <div>
                        <InputText @bind-Value="oEmitirCotizacionAutoDTO.prendario.telefono" class="form-control" placeholder="Tel."></InputText>
                    </div>
                </div>
                <div class="col-md-5">
                    <label style="color:white">Mail</label>
                    <div>
                        <InputText @bind-Value="oEmitirCotizacionAutoDTO.prendario.mail" class="form-control" placeholder="Mail"></InputText>
                    </div>
                </div>
            </div>
        </div>

        @*<button class="btn btn-success" type="submit">Emitir</button>*@

    </EditForm>
    <button type="button" class="btn btn-success" style="width:200px;margin:15px" @onclick="@(() => OnClickHandle())">
        Emitir
    </button>
}

@code {

    [Parameter] public int oAdjuntoID1 { get; set; }
    [Parameter] public int oAdjuntoID2 { get; set; }
    [Parameter] public int oAdjuntoID3 { get; set; }
    [Parameter] public int oAdjuntoID4 { get; set; }
    [Parameter] public int oAdjuntoID5 { get; set; }

    [Parameter] public int oAdjuntoTipo1 { get; set; }
    [Parameter] public int oAdjuntoTipo2 { get; set; }
    [Parameter] public int oAdjuntoTipo3 { get; set; }
    [Parameter] public int oAdjuntoTipo4 { get; set; }
    [Parameter] public int oAdjuntoTipo5 { get; set; }
    private EmitirCotizacionAutoDTO oEmitirCotizacionAutoDTO = new EmitirCotizacionAutoDTO();

    private int oCotizacionID;
    private bool oMostrarCargando;

    private string oMedioPagoIDAux;
    public string oMedioPagoID
    {
        get { return oMedioPagoIDAux; }
        set
        {
            oMedioPagoIDAux = value;
            OnMedioPagoChange();
        }
    }

    private List<TipoDocumentoDTO> oTipoDocumentoDTOList;
    private List<CondicionesIVADTO> oCondicionesIVADTOList;
    private List<ProvinciaDTO> oProvinciasList;
    private List<TipoMedioPagoDTO> oTipoMedioPagoDTOList = new List<TipoMedioPagoDTO>();
    private DateTime? ofechaNacimiento;
    private DateTime? oInicioVigencia;
    private string oVencimientoMedioPago;
    private string oVencimientoMedioPagoAno;
    private string oVencimientoMedioPagoMes;
    private DateTime? oVtoPruebaHidr;



    private CotizacionAutoDTO oCotizacionAutoDTO;
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("b111" + oAdjuntoID1);
        Console.WriteLine("b222" + oAdjuntoID2);
        Console.WriteLine("b333" + oAdjuntoID3);
        Console.WriteLine("b444" + oAdjuntoID4);
        Console.WriteLine("b555" + oAdjuntoID5);

        //await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNumeroMedioPago", false);
        //await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNombreTitularTarjeta", false);
        //await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "cmbVencimientoMedioPagoMes", false);
        //await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "cmbVencimientoMedioPagoAno", false);
        //await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtTipoDocTitularTarjeta", false);
        //await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNroDocTitularTarjeta", false);


        oMostrarCargando = false;
        string CotizacionAutoDTOJson = await JSRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        var responseHttp = await repositorio.Get<List<TipoDocumentoDTO>>("api/Externo/Prudencia/catalogos/GetTiposDocumentos");
        oTipoDocumentoDTOList = responseHttp.Response;

        oTipoDocumentoDTOList = (from c in oTipoDocumentoDTOList
                                 where c.tipoDocumentoID == "80" || c.tipoDocumentoID == "81" || c.tipoDocumentoID == "83"
                                 select c).ToList();




        var responseHttp2 = await repositorio.Get<List<CondicionesIVADTO>>("api/Externo/Prudencia/catalogos/GetCondicionesIva");
        oCondicionesIVADTOList = responseHttp2.Response;

        var responseHttp3 = await repositorio.Get<List<ProvinciaDTO>>("api/Externo/Prudencia/catalogos/GetProvincias");
        oProvinciasList = responseHttp3.Response;

        var responseHttp4 = await repositorio.Get<List<TipoMedioPagoDTO>>("api/Externo/Prudencia/catalogos/GetMediosDePago");
        List<TipoMedioPagoDTO> oTipoMedioPagoDTOListAux = responseHttp4.Response;
        foreach (TipoMedioPagoDTO tipoMedioPagoDTO in oTipoMedioPagoDTOListAux)
        {
            if (tipoMedioPagoDTO.medioPagoID == "0")
                continue;
            if (tipoMedioPagoDTO.medioPagoID == "1")
                tipoMedioPagoDTO.nombre = "TARJETA NARANJA";

            if (tipoMedioPagoDTO.medioPagoID == "2")
                tipoMedioPagoDTO.nombre = "CBU - DEBITO EN CUENTA";

            if (tipoMedioPagoDTO.medioPagoID == "3")
                tipoMedioPagoDTO.nombre = "TARJETA DE CREDITO - MERCADO PAGO";

            oTipoMedioPagoDTOList.Add(tipoMedioPagoDTO);
        }


;


        oEmitirCotizacionAutoDTO.medioDePago = new MedioPagoDTO();
        oEmitirCotizacionAutoDTO.prendario = new AseguradoPatrimonialDTO();
        oEmitirCotizacionAutoDTO.adjuntos = new AdjuntoDTO[5];

        oInicioVigencia = DateTime.Today;
        oVencimientoMedioPagoAno = DateTime.Today.Day.ToString().PadLeft(2, '0');
        oVencimientoMedioPagoMes = DateTime.Today.Year.ToString();
        oVtoPruebaHidr = DateTime.Today;
        ofechaNacimiento = DateTime.Today.AddYears(-40);

        oEmitirCotizacionAutoDTO.medioDePago.tipoDocTitularTarjeta = "DNI";
#if DEBUG


        oEmitirCotizacionAutoDTO.motor = "XXXXXhathat";
        oEmitirCotizacionAutoDTO.chasis = "XXXXX";
        oEmitirCotizacionAutoDTO.observaciones = "XXXXX";
        oVencimientoMedioPagoAno = DateTime.Today.AddMonths(10).Day.ToString().PadLeft(2, '0');
        oVencimientoMedioPagoMes = DateTime.Today.AddMonths(10).Year.ToString();
        oEmitirCotizacionAutoDTO.medioDePago.numeroMedioPago = "4338330002590988";
        oEmitirCotizacionAutoDTO.medioDePago.nombreTitularTarjeta = "Noguera Adriel";

        oEmitirCotizacionAutoDTO.medioDePago.nroDocTitularTarjeta = "37683118";




        oEmitirCotizacionAutoDTO.gncMarca = "Marca";
        oEmitirCotizacionAutoDTO.gncCapacidad = 30;
        oEmitirCotizacionAutoDTO.gncOblea = "oblea4667";
        oEmitirCotizacionAutoDTO.gncRegulador = "Regulador";



        oEmitirCotizacionAutoDTO.prendario.nombre = "nombre";
        oEmitirCotizacionAutoDTO.prendario.numeroDocumento = "20182053297";
        ofechaNacimiento = DateTime.Now.AddYears(-40);
        oEmitirCotizacionAutoDTO.prendario.domicilio = "domicilio";
        oEmitirCotizacionAutoDTO.prendario.domicilioNumero = 2346;
        oEmitirCotizacionAutoDTO.prendario.domicilioPiso = 8;
        oEmitirCotizacionAutoDTO.prendario.domicilioDpto = "B";
        oEmitirCotizacionAutoDTO.prendario.localidad = "localidad";
        oEmitirCotizacionAutoDTO.prendario.codigoPostal = "1429";
        oEmitirCotizacionAutoDTO.prendario.telefono = "1144487654";
        oEmitirCotizacionAutoDTO.prendario.mail = "XXXXX@XX.com";

#endif

    }


    private async Task OnDataAnnonationsValidated()
    {
        if (string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.motor) || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.chasis))
        {
            await mostrarMensajes.MostrarMensajeError("El Motor y Chasis son obligatorios");
            return;
        }

        if (string.IsNullOrEmpty(oMedioPagoID))
        {
            await mostrarMensajes.MostrarMensajeError("Debe Seleccionar un medio de Pago");
            return;
        }
        if ((DateTime)oInicioVigencia < DateTime.Today || (DateTime)oInicioVigencia > DateTime.Today.AddDays(10))
        {
            await mostrarMensajes.MostrarMensajeError("La Fecha de Inicio de Vigencia no puede ser menor a hoy ni mayor a 10 dias a partir de hoy");
            return;
        }


        //if (string.IsNullOrEmpty(oMedioPagoID) || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.numeroMedioPago)
        //    || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.nombreTitularTarjeta) || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.tipoDocTitularTarjeta)
        //    || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.nroDocTitularTarjeta))
        //{
        //    await mostrarMensajes.MostrarMensajeError("Los Datos de Medios de Pagos son obligatorios");
        //    return;
        //}

        RespuestaPolizaAutoDTO oRespuestaPolizaAutoDTO;



        oCotizacionID = oCotizacionAutoDTO.cotizacionID;



        AdjuntoDTO[] oAdjuntos = new AdjuntoDTO[5];
        oAdjuntos[0] = new AdjuntoDTO();
        oAdjuntos[1] = new AdjuntoDTO();
        oAdjuntos[2] = new AdjuntoDTO();
        oAdjuntos[3] = new AdjuntoDTO();
        oAdjuntos[4] = new AdjuntoDTO();

        oAdjuntos[0].id = oAdjuntoID1;
        oAdjuntos[0].tipo = oAdjuntoTipo1;
        oAdjuntos[1].id = oAdjuntoID2;
        oAdjuntos[1].tipo = oAdjuntoTipo1;
        oAdjuntos[2].id = oAdjuntoID3;
        oAdjuntos[2].tipo = oAdjuntoTipo1;
        oAdjuntos[3].id = oAdjuntoID4;
        oAdjuntos[3].tipo = oAdjuntoTipo1;
        oAdjuntos[4].id = oAdjuntoID5;
        oAdjuntos[4].tipo = oAdjuntoTipo1;
        oEmitirCotizacionAutoDTO.adjuntos = oAdjuntos;




        oEmitirCotizacionAutoDTO.inicioVigencia = ((DateTime)oInicioVigencia).ToString("dd/MM/yyyy");

        oEmitirCotizacionAutoDTO.medioDePago.vencimientoMedioPago = oVencimientoMedioPagoMes + "/" + oVencimientoMedioPagoAno;

        oEmitirCotizacionAutoDTO.gncVtoPruebaHidr = ((DateTime)oVtoPruebaHidr).ToString("dd/MM/yyyy");
        oEmitirCotizacionAutoDTO.medioDePago.medioPagoID = int.Parse(oMedioPagoID);


        oEmitirCotizacionAutoDTO.retornaPoliza = true;


        if (oCotizacionAutoDTO.tieneAcreedorPrendario)
        {
            oEmitirCotizacionAutoDTO.prendario.fechaNacimiento = ((DateTime)ofechaNacimiento).ToString("dd/MM/yyyy");
            oEmitirCotizacionAutoDTO.prendario.paisID = "ARG";
        }
        else
        {
            oEmitirCotizacionAutoDTO.prendario = null;
        }

        oMostrarCargando = true;
        var responseHttp = await repositorio.Post<EmitirCotizacionAutoDTO, RespuestaPolizaAutoDTO>("api/Externo/Prudencia/cotizaciones/autos/" + oCotizacionID + "/emitir", oEmitirCotizacionAutoDTO);


        oMostrarCargando = false;
        if (responseHttp.Error)
        {
            var mensajeError = await responseHttp.GetBody();

            await mostrarMensajes.MostrarMensajeError(mensajeError);
            Console.WriteLine(mensajeError);
            oMostrarCargando = false;
        }
        else
        {
            //= responseHttp.Response;
            oRespuestaPolizaAutoDTO = responseHttp.Response;
            navigationManager.NavigateTo($"/ziren/reporte/{ oRespuestaPolizaAutoDTO.polizaID}");

        }
    }

    private async Task OnClickHandle()
    {
        if (string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.motor) || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.chasis))
        {
            await mostrarMensajes.MostrarMensajeError("El Motor y Chasis son obligatorios");
            return;
        }

        if (string.IsNullOrEmpty(oMedioPagoID))
        {
            await mostrarMensajes.MostrarMensajeError("Debe Seleccionar un medio de Pago");
            return;
        }

        if ((DateTime)oInicioVigencia < DateTime.Today || (DateTime)oInicioVigencia > DateTime.Today.AddDays(7))
        {
            await mostrarMensajes.MostrarMensajeError("La Fecha de Inicio de Vigencia no puede ser menor a hoy ni mayor a 7 dias a partir de hoy");
            return;
        }
        //if (string.IsNullOrEmpty(oMedioPagoID) || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.numeroMedioPago)
        //    || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.nombreTitularTarjeta) || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.tipoDocTitularTarjeta)
        //    || string.IsNullOrEmpty(oEmitirCotizacionAutoDTO.medioDePago.nroDocTitularTarjeta))
        //{
        //    await mostrarMensajes.MostrarMensajeError("Los Datos de Medios de Pagos son obligatorios");
        //    return;
        //}

        RespuestaPolizaAutoDTO oRespuestaPolizaAutoDTO;



        oCotizacionID = oCotizacionAutoDTO.cotizacionID;



        AdjuntoDTO[] oAdjuntos = new AdjuntoDTO[5];
        oAdjuntos[0] = new AdjuntoDTO();
        oAdjuntos[1] = new AdjuntoDTO();
        oAdjuntos[2] = new AdjuntoDTO();
        oAdjuntos[3] = new AdjuntoDTO();
        oAdjuntos[4] = new AdjuntoDTO();

        oAdjuntos[0].id = oAdjuntoID1;
        oAdjuntos[0].tipo = oAdjuntoTipo1;
        oAdjuntos[1].id = oAdjuntoID2;
        oAdjuntos[1].tipo = oAdjuntoTipo1;
        oAdjuntos[2].id = oAdjuntoID3;
        oAdjuntos[2].tipo = oAdjuntoTipo1;
        oAdjuntos[3].id = oAdjuntoID4;
        oAdjuntos[3].tipo = oAdjuntoTipo1;
        oAdjuntos[4].id = oAdjuntoID5;
        oAdjuntos[4].tipo = oAdjuntoTipo1;
        oEmitirCotizacionAutoDTO.adjuntos = oAdjuntos;




        oEmitirCotizacionAutoDTO.inicioVigencia = ((DateTime)oInicioVigencia).ToString("dd/MM/yyyy");
        oEmitirCotizacionAutoDTO.medioDePago.vencimientoMedioPago = oVencimientoMedioPagoMes + "/" + oVencimientoMedioPagoAno;
        oEmitirCotizacionAutoDTO.gncVtoPruebaHidr = ((DateTime)oVtoPruebaHidr).ToString("dd/MM/yyyy");
        oEmitirCotizacionAutoDTO.medioDePago.medioPagoID = int.Parse(oMedioPagoID);


        oEmitirCotizacionAutoDTO.retornaPoliza = true;


        if (oCotizacionAutoDTO.tieneAcreedorPrendario)
        {
            oEmitirCotizacionAutoDTO.prendario.fechaNacimiento = ((DateTime)ofechaNacimiento).ToString("dd/MM/yyyy");
            oEmitirCotizacionAutoDTO.prendario.paisID = "ARG";
        }
        else
        {
            oEmitirCotizacionAutoDTO.prendario = new AseguradoPatrimonialDTO(); ;
        }

        oMostrarCargando = true;
        var responseHttp = await repositorio.Post<EmitirCotizacionAutoDTO, RespuestaPolizaAutoDTO>("api/Externo/Prudencia/cotizaciones/autos/" + oCotizacionID + "/emitir", oEmitirCotizacionAutoDTO);


        oMostrarCargando = false;
        if (responseHttp.Error)
        {
            var mensajeError = await responseHttp.GetBody();

            await mostrarMensajes.MostrarMensajeError(mensajeError);
            Console.WriteLine(mensajeError);
            oMostrarCargando = false;
            // navigationManager.NavigateTo($"/ziren/Emision/{oAdjuntos[0].id}/{oAdjuntos[0].tipo}/{oAdjuntos[1].id}/{oAdjuntos[1].tipo}/{oAdjuntos[2].id}/{oAdjuntos[2].tipo}/{oAdjuntos[3].id}/{oAdjuntos[3].tipo}/{oAdjuntos[4].id}/{oAdjuntos[4].tipo}");

        }
        else
        {
            //= responseHttp.Response;
            oRespuestaPolizaAutoDTO = responseHttp.Response;
          
            string oRespuestaPolizaAutoDTOJson = JsonSerializer.Serialize(oRespuestaPolizaAutoDTO);
            Console.WriteLine(oRespuestaPolizaAutoDTOJson);

            navigationManager.NavigateTo($"/ziren/reporte/{ oRespuestaPolizaAutoDTO.polizaID}");

        }
    }

    private async void OnMedioPagoChange()
    {

        await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNumeroMedioPago", false);
        await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNombreTitularTarjeta", false);
        await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "cmbVencimientoMedioPagoMes", false);
        await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "cmbVencimientoMedioPagoAno", false);
        await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtTipoDocTitularTarjeta", false);
        await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNroDocTitularTarjeta", false);
        if (oMedioPagoID == "2")
        {

            await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNumeroMedioPago", true);
            await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNombreTitularTarjeta", true);

        }
        else
        {
            await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNumeroMedioPago", true);
            await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNombreTitularTarjeta", true);
            await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "cmbVencimientoMedioPagoMes", true);
            await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "cmbVencimientoMedioPagoAno", true);
           // await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtTipoDocTitularTarjeta", true);
            await JSRuntime.InvokeVoidAsync("JsFunctions.enableElementB", "txtNroDocTitularTarjeta", true);
        }
        // await JsRuntime.InvokeAsync<string>("open", $"https://ziren.com.ar/modo-comodo/", "_blank");

    }


}
