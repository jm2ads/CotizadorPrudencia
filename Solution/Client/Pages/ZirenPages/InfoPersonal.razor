@*@page "/ziren/infopersonal/{marcaID:int}/{anoID:int}/{modeloID:int}/{provinciaID:int}"*@
@page "/ziren/infopersonal"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@inject NavigationManager navigationManager

@inject IJSRuntime JsRuntime
@using System.Text.Json;

<h3 style="color:white">Info Personal</h3>
<EditForm Model="marcaID">

    <div class="row" style="margin:10px">
        <div class="col-md-5">
            <label style="color:white">Nombre y Apellido</label>
            <div>
                <InputText @bind-Value="onombre" class="form-control" placeholder="Nombre y Apellido"></InputText>
            </div>
        </div>
        <div class="col-md-3">
            <label style="color:white">Patente</label>
            <div>
                <InputText @bind-Value="opatente" class="form-control" placeholder="Patente"></InputText>
            </div>
        </div>
        <div class="col-md-4">
            <label style="color:white">Fecha de Nacimiento</label>
            <div>
                <InputDate class="form-control" @bind-Value="ofechaNacimiento"></InputDate>
            </div>
        </div>
    </div>

    <div class="row" style="margin:10px">
        <div class="col-md-5">
            <label style="color:white">Mail</label>
            <div>
                <InputText @bind-Value="omail" class="form-control" placeholder="Mail"></InputText>
            </div>
        </div>

        <div class="col-md-3">
            <label style="color:white">Celular</label>
            <div>
                <InputText @bind-Value="otelefono" class="form-control" placeholder="Sin 0 ni 15"></InputText>
            </div>
        </div>
    </div>

    <div class="row" style="margin:10px">
        <div class="col-md-3">
            <button type="button" class="btn btn-info" style="width:200px" @onclick="@(() => OnClickHandle())">Siguiente</button>
        </div>
    </div>
</EditForm>





@code {
    [Parameter] public int marcaID { get; set; }
    [Parameter] public int anoID { get; set; }
    [Parameter] public int modeloID { get; set; }
    [Parameter] public int provinciaID { get; set; }

    private string onombre;
    // private string ofechaNacimiento;
    private string omail;
    private string otelefono;
    private string opatente;

    private DateTime? ofechaNacimiento;

    protected override async Task OnInitializedAsync()
    {


        ofechaNacimiento = DateTime.Today.AddYears(-30);



#if DEBUG
        onombre = "Alejandro Sosa";
        omail = "jm2@outlook.com.ar";
        otelefono = "1144406739";
        opatente= UtilidadesString.GetRandomString(6);
#endif
    }

    private async Task OnClickHandle()
    {
        if (string.IsNullOrEmpty(onombre)  || string.IsNullOrEmpty(omail) || string.IsNullOrEmpty(otelefono)  || string.IsNullOrEmpty(opatente) )
        {
            var mensajeError = "Todos los campos son requeridos";
            await mostrarMensajes.MostrarMensajeError(mensajeError);
            return;
        }
        string CotizacionAutoDTOJson = await JsRuntime.GetFromLocalStorage("CotizacionAutoDTO");
        CotizacionAutoDTO oCotizacionAutoDTO = JsonSerializer.Deserialize<CotizacionAutoDTO>(CotizacionAutoDTOJson);

        oCotizacionAutoDTO.asegurado.nombre = onombre;
        oCotizacionAutoDTO.asegurado.fechaNacimiento = ((DateTime)ofechaNacimiento).ToString("dd/MM/yyyy");
        oCotizacionAutoDTO.asegurado.mail = omail;
        oCotizacionAutoDTO.asegurado.telefono = otelefono;

        oCotizacionAutoDTO.vehiculo.patente = opatente;

        CotizacionAutoDTOJson = JsonSerializer.Serialize(oCotizacionAutoDTO);
        await JsRuntime.SetInLocalStorage("CotizacionAutoDTO", CotizacionAutoDTOJson);
        Console.WriteLine(CotizacionAutoDTOJson);



        navigationManager.NavigateTo("/ziren/CotizacionRapida");
    }

}
