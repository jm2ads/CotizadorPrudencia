@page "/Organizador/crear/{grupoId:int}/{Url}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensajes

<h3 style="color:white">Crear Organizador (de @Url)</h3>


<FormOrganizador organizador="organizador" oOnValidSubmit="Crear"></FormOrganizador>

@code {
    [Parameter] public int grupoId { get; set; }
    [Parameter] public string Url { get; set; }
    private Organizador organizador = new Organizador();



    private async Task Crear()
    {
        #region Valido Form
        if (string.IsNullOrEmpty(organizador.Url) || string.IsNullOrEmpty(organizador.Nombre) || string.IsNullOrEmpty(organizador.Apellido) || string.IsNullOrEmpty(organizador.Dni)
            || string.IsNullOrEmpty(organizador.Matricula) || string.IsNullOrEmpty(organizador.Mail) || string.IsNullOrEmpty(organizador.Celular1) || string.IsNullOrEmpty(organizador.Domicilio)
            || string.IsNullOrEmpty(organizador.Localidad) || string.IsNullOrEmpty(organizador.Logo) ||  string.IsNullOrEmpty(organizador.Whatsapp))
        {

            await mostrarMensajes.MostrarMensajeError("Los Campos => Url, Nombre, Apellido, Dni, Matricula, Mail, Celular1, Domicilio," +
                " Localidad, Logo y Whatsapp son Obligatorios");
            return;
        }
        #endregion
        organizador.GrupoId = grupoId;
        var httpResponse = await repositorio.Post("api/Organizadores", organizador);


        if (httpResponse.Error)
        {
            var body = await httpResponse.GetBody();

            await mostrarMensajes.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            //  await mostrarMensajes.MostrarMensajeExitoso(await httpResponse.GetBody());
            navigationManager.NavigateTo("/admin/Grupos");
        }
    }
}
