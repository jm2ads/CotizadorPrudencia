@page "/Organizador/editar/{organizadorId:int}/{Url}"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensaje
@inject NavigationManager navigationManager

<h3 style="color:white">Editar Grupo</h3>

@if (organizador == null)
{
    <Cargando></Cargando> }
else
{
    <FormOrganizador organizador="organizador" OnValidSubmit="Editar"></FormOrganizador>
}
@code {
    [Parameter] public int organizadorId { get; set; }
    [Parameter] public string Url { get; set; }
    private Organizador organizador;

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Organizador>("api/Organizadores/" + organizadorId);
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("Grupos");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            organizador = httpResponse.Response;
        }



    }
    private async Task Editar()
    {
      

        #region Checkeo si ya existe la URL
        var httpResponse2 = await repositorio.Post<Organizador, bool>("api/ZirenHeads/YaExisteUrl", organizador);
        if (httpResponse2.Response == true)
        {
            await mostrarMensaje.MostrarMensajeError("Error : La url ya existe");
            return;
        }
        #endregion

        var httpResponse = await repositorio.Put("api/Organizadores/" + organizador.OrganizadorId, organizador);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("/admin/Grupos");
        }
    }
}
