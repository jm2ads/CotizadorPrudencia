@page "/Productor/editar/{productorId:int}/{Url}"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensaje
@inject NavigationManager navigationManager

<h3 style="color:white">Editar Grupo</h3>

@if (productor == null)
{
    <text>Cargando...</text> }
else
{
    <FormProductor productor="productor" oOnValidSubmit="Editar"></FormProductor>
}
@code {

    [Parameter] public int productorId { get; set; }
    [Parameter] public string Url { get; set; }
    private Productor productor;

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Productor>("api/Productores/" + productorId);
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("Grupos");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            productor = httpResponse.Response;
        }



    }
    private async Task Editar()
    {
        #region Valido Form
        if (string.IsNullOrEmpty(productor.Url) || string.IsNullOrEmpty(productor.Nombre) || string.IsNullOrEmpty(productor.Apellido) || string.IsNullOrEmpty(productor.Dni)
            || string.IsNullOrEmpty(productor.Matricula) || string.IsNullOrEmpty(productor.Mail) || string.IsNullOrEmpty(productor.Celular1) || string.IsNullOrEmpty(productor.Domicilio)
            || string.IsNullOrEmpty(productor.Localidad) || string.IsNullOrEmpty(productor.Logo) ||  string.IsNullOrEmpty(productor.Whatsapp))
        {

            await mostrarMensaje.MostrarMensajeError("Los Campos => Url, Nombre, Apellido, Dni, Matricula, Mail, Celular1, Domicilio," +
                " Localidad, Logo y Whatsapp son Obligatorios");
            return;
        }
        #endregion
        var httpResponse = await repositorio.Put("api/Productores/" + productor.ProductorId, productor);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("/admin/Grupos");
        }
    }
}
